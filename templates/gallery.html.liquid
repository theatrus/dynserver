{{ header }}

<div class="container gallery-container">
    {% if folder_title %}
        <h2>{{ folder_title }}</h2>
    {% else %}
        <h2>Photo Gallery{% if gallery_path != "" %}: {{ gallery_path }}{% endif %}</h2>
    {% endif %}
    
    {% if folder_description %}
        <div class="folder-description">
            {{ folder_description }}
        </div>
    {% endif %}
    
    {% if items.size > 0 %}
        <!-- Directory Navigation -->
        {% assign directories = items | where: "is_directory", true %}
        {% if directories.size > 0 %}
            <div class="gallery-folders">
                <h3>Folders</h3>
                <div class="folder-grid">
                    {% for dir in directories %}
                        <a href="/gallery/{{ dir.path }}" class="folder-item">
                            <div class="folder-preview">
                                {% if dir.preview_images and dir.preview_images.size > 0 %}
                                    <div class="preview-images">
                                        {% for image_url in dir.preview_images limit: 4 %}
                                            <img src="{{ image_url }}" alt="Preview" loading="lazy" class="preview-img preview-img-{{ forloop.index }}">
                                        {% endfor %}
                                    </div>
                                {% else %}
                                    <div class="folder-icon">üìÅ</div>
                                {% endif %}
                            </div>
                            <div class="folder-info">
                                <div class="folder-name">
                                    {% if dir.display_name %}
                                        {{ dir.display_name }}
                                    {% else %}
                                        {{ dir.name }}
                                    {% endif %}
                                </div>
                                <div class="folder-count">{{ dir.item_count }} images</div>
                                {% if dir.description %}
                                    <div class="folder-description-preview">{{ dir.description | strip_html | truncate: 100 }}</div>
                                {% endif %}
                            </div>
                        </a>
                    {% endfor %}
                </div>
            </div>
        {% endif %}
        
        <!-- Image Gallery -->
        {% if images.size > 0 %}
            <div class="gallery-images">
                <h3>Images</h3>
                <div class="image-grid">
                    <div class="masonry-column" data-column="0">
                        {% for image in images %}
                            {% if image.masonry_column == 0 %}
                                <div class="image-item" id="{{ image.name | replace: '.', '' | replace: ' ', '' | replace: '-', '' | replace: '_', '' }}" data-path="{{ image.path }}" style="width: {{ image.gallery_display_width }}px; height: {{ image.gallery_display_height }}px;">
                                    <a href="/gallery/detail/{{ image.path }}" class="image-link">
                                        <img src="{{ image.gallery_url }}" alt="{{ image.name }}" width="{{ image.gallery_display_width }}" height="{{ image.gallery_display_height }}">
                                    </a>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                    <div class="masonry-column" data-column="1">
                        {% for image in images %}
                            {% if image.masonry_column == 1 %}
                                <div class="image-item" id="{{ image.name | replace: '.', '' | replace: ' ', '' | replace: '-', '' | replace: '_', '' }}" data-path="{{ image.path }}" style="width: {{ image.gallery_display_width }}px; height: {{ image.gallery_display_height }}px;">
                                    <a href="/gallery/detail/{{ image.path }}" class="image-link">
                                        <img src="{{ image.gallery_url }}" alt="{{ image.name }}" width="{{ image.gallery_display_width }}" height="{{ image.gallery_display_height }}">
                                    </a>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
                
                <!-- Pagination -->
                {% if total_pages > 1 %}
                    <div class="gallery-pagination">
                        {% if has_prev %}
                            <a href="?page={{ prev_page }}" class="page-link">‚Üê Previous</a>
                        {% endif %}
                        
                        <span class="page-info">Page {{ current_page | plus: 1 }} of {{ total_pages }}</span>
                        
                        {% if has_next %}
                            <a href="?page={{ next_page }}" class="page-link">Next ‚Üí</a>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        {% endif %}
    {% else %}
        <p class="empty-gallery">No images found in this directory.</p>
    {% endif %}
</div>

<style>
body {
    background-color: #1a1a1a;
    color: #e0e0e0;
}

.gallery-container {
    max-width: 1400px;
    background-color: #1a1a1a;
}

.folder-description {
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: #404040;
    border-radius: 8px;
    color: #e0e0e0;
    line-height: 1.6;
}

.folder-description h1,
.folder-description h2,
.folder-description h3,
.folder-description h4,
.folder-description h5,
.folder-description h6 {
    color: #e0e0e0;
}

.folder-description p {
    margin-bottom: 1rem;
}

.folder-description p:last-child {
    margin-bottom: 0;
}

.folder-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
}

.folder-item {
    display: flex;
    flex-direction: column;
    background: #404040;
    border-radius: 8px;
    text-decoration: none;
    color: #e0e0e0;
    transition: transform 0.2s, box-shadow 0.2s;
    overflow: hidden;
}

.folder-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.4);
}

.folder-preview {
    width: 100%;
    height: 160px;
    position: relative;
    overflow: hidden;
    background: #2a2a2a;
    display: flex;
    align-items: center;
    justify-content: center;
}

.folder-icon {
    font-size: 3rem;
    color: #888;
}

.preview-images {
    position: relative;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    gap: 2px;
}

.preview-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity 0.3s;
}

.preview-img:only-child {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
}

.preview-images:has(.preview-img:nth-child(2):last-child) .preview-img {
    grid-row: 1 / -1;
}

.preview-images:has(.preview-img:nth-child(3):last-child) .preview-img:first-child {
    grid-column: 1 / -1;
}

.preview-img-1 {
    z-index: 4;
}

.preview-img-2 {
    z-index: 3;
}

.preview-img-3 {
    z-index: 2;
}

.preview-img-4 {
    z-index: 1;
}

.folder-info {
    padding: 1rem;
    text-align: center;
}

.folder-name {
    font-weight: 600;
    margin-bottom: 0.25rem;
    font-size: 0.95rem;
}

.folder-count {
    font-size: 0.8rem;
    color: #999;
}

.folder-description-preview {
    font-size: 0.75rem;
    color: #bbb;
    margin-top: 0.5rem;
    line-height: 1.3;
}

.image-grid {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 2rem;
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
}

.masonry-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    min-width: 0; /* Allow flex items to shrink */
}

@media (max-width: 768px) {
    .image-grid {
        flex-direction: column;
        gap: 1rem;
    }
    
    .masonry-column[data-column="1"] {
        display: none;
    }
}

.image-item {
    position: relative;
    background: #404040;
    border-radius: 0;
    overflow: hidden;
    transition: transform 0.2s;
    display: block;
}

.image-item:hover {
    transform: scale(1.02);
}

.image-link {
    display: block;
    position: relative;
}

.image-item img {
    width: 100%;
    height: auto;
    display: block;
}


.gallery-pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    margin-top: 3rem;
    padding: 2rem 0;
}

.page-link {
    padding: 0.5rem 1rem;
    background: #404040;
    color: #e0e0e0;
    text-decoration: none;
    border-radius: 4px;
    transition: background 0.3s;
}

.page-link:hover {
    background: #555;
}

.page-info {
    font-weight: 500;
}

.empty-gallery {
    text-align: center;
    padding: 4rem 0;
    color: #999;
}

</style>

<script>
// Detect viewport width and reload with appropriate layout
(function() {
    const currentUrl = new URL(window.location);
    const viewportWidth = window.innerWidth;
    const currentViewport = currentUrl.searchParams.get('viewport_width');
    
    // Only reload if viewport width differs significantly (50px threshold)
    if (!currentViewport || Math.abs(parseInt(currentViewport) - viewportWidth) > 50) {
        currentUrl.searchParams.set('viewport_width', viewportWidth);
        
        // Only reload if we're not already loading with the correct viewport
        if (currentUrl.toString() !== window.location.toString()) {
            window.location.replace(currentUrl.toString());
        }
    }
    
    // Handle window resize with debouncing
    let resizeTimeout;
    window.addEventListener('resize', function() {
        clearTimeout(resizeTimeout);
        resizeTimeout = setTimeout(function() {
            const newViewportWidth = window.innerWidth;
            const currentViewport = new URL(window.location).searchParams.get('viewport_width');
            
            if (!currentViewport || Math.abs(parseInt(currentViewport) - newViewportWidth) > 50) {
                const newUrl = new URL(window.location);
                newUrl.searchParams.set('viewport_width', newViewportWidth);
                window.location.replace(newUrl.toString());
            }
        }, 300);
    });
})();
</script>

{{ footer }}