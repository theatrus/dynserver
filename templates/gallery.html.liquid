{{ header }}

<div class="container gallery-container">
    <h2>Photo Gallery{% if gallery_path != "" %}: {{ gallery_path }}{% endif %}</h2>
    
    {% if items.size > 0 %}
        <!-- Directory Navigation -->
        {% assign directories = items | where: "is_directory", true %}
        {% if directories.size > 0 %}
            <div class="gallery-folders">
                <h3>Folders</h3>
                <div class="folder-grid">
                    {% for dir in directories %}
                        <a href="/gallery/{{ dir.path }}" class="folder-item">
                            <div class="folder-icon">üìÅ</div>
                            <div class="folder-name">{{ dir.name }}</div>
                            <div class="folder-count">{{ dir.item_count }} images</div>
                        </a>
                    {% endfor %}
                </div>
            </div>
        {% endif %}
        
        <!-- Image Gallery -->
        {% if images.size > 0 %}
            <div class="gallery-images">
                <h3>Images</h3>
                <div class="image-grid">
                    {% for image in images %}
                        <div class="image-item" data-path="{{ image.path }}">
                            <a href="/gallery/detail/{{ image.path }}" class="image-link">
                                <img src="{{ image.thumbnail_url }}" alt="{{ image.name }}" loading="lazy">
                                <div class="image-overlay">
                                    <div class="image-name">{{ image.name }}</div>
                                </div>
                            </a>
                            <div class="image-hover-info" style="display: none;">
                                <h4>{{ image.name }}</h4>
                                <p>Dimensions: {{ image.dimensions[0] }}x{{ image.dimensions[1] }}</p>
                                <p>Size: {{ image.file_size | divided_by: 1024 | divided_by: 1024 | round: 2 }} MB</p>
                                {% if image.description %}
                                    <div class="image-description">{{ image.description }}</div>
                                {% endif %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
                
                <!-- Pagination -->
                {% if total_pages > 1 %}
                    <div class="gallery-pagination">
                        {% if has_prev %}
                            <a href="?page={{ prev_page }}" class="page-link">‚Üê Previous</a>
                        {% endif %}
                        
                        <span class="page-info">Page {{ current_page | plus: 1 }} of {{ total_pages }}</span>
                        
                        {% if has_next %}
                            <a href="?page={{ next_page }}" class="page-link">Next ‚Üí</a>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        {% endif %}
    {% else %}
        <p class="empty-gallery">No images found in this directory.</p>
    {% endif %}
</div>

<style>
.gallery-container {
    max-width: 1400px;
}

.folder-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
}

.folder-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.5rem;
    background: #f8f9fa;
    border-radius: 8px;
    text-decoration: none;
    color: #333;
    transition: transform 0.2s, box-shadow 0.2s;
}

.folder-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.folder-icon {
    font-size: 3rem;
    margin-bottom: 0.5rem;
}

.folder-name {
    font-weight: 600;
    margin-bottom: 0.25rem;
}

.folder-count {
    font-size: 0.875rem;
    color: #666;
}

.image-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.image-item {
    position: relative;
    background: #f8f9fa;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s;
}

.image-item:hover {
    transform: scale(1.02);
}

.image-link {
    display: block;
    position: relative;
}

.image-item img {
    width: 100%;
    height: 250px;
    object-fit: cover;
}

.image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to bottom, transparent, rgba(0,0,0,0.7));
    color: white;
    padding: 1rem;
    opacity: 0;
    transition: opacity 0.3s;
}

.image-item:hover .image-overlay {
    opacity: 1;
}

.image-name {
    font-size: 0.875rem;
    font-weight: 500;
}

.gallery-pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    margin-top: 3rem;
    padding: 2rem 0;
}

.page-link {
    padding: 0.5rem 1rem;
    background: #2c3e50;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: background 0.3s;
}

.page-link:hover {
    background: #34495e;
}

.page-info {
    font-weight: 500;
}

.empty-gallery {
    text-align: center;
    padding: 4rem 0;
    color: #666;
}

/* Hover tooltip styles */
.image-hover-info {
    position: absolute;
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 1rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 1000;
    max-width: 300px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const imageItems = document.querySelectorAll('.image-item');
    
    imageItems.forEach(item => {
        const hoverInfo = item.querySelector('.image-hover-info');
        let hoverTimeout;
        
        item.addEventListener('mouseenter', function(e) {
            hoverTimeout = setTimeout(() => {
                hoverInfo.style.display = 'block';
                
                const rect = item.getBoundingClientRect();
                const infoRect = hoverInfo.getBoundingClientRect();
                
                let left = e.clientX + 10;
                let top = e.clientY + 10;
                
                if (left + infoRect.width > window.innerWidth) {
                    left = e.clientX - infoRect.width - 10;
                }
                
                if (top + infoRect.height > window.innerHeight) {
                    top = e.clientY - infoRect.height - 10;
                }
                
                hoverInfo.style.position = 'fixed';
                hoverInfo.style.left = left + 'px';
                hoverInfo.style.top = top + 'px';
            }, 500);
        });
        
        item.addEventListener('mouseleave', function() {
            clearTimeout(hoverTimeout);
            hoverInfo.style.display = 'none';
        });
    });
});
</script>

{{ footer }}