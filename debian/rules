#!/usr/bin/make -f

export DH_VERBOSE = 1
export CARGO_HOME = $(CURDIR)/debian/cargo

# Enable all hardening options
export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# Set optimization flags for release build
export CARGO_PROFILE_RELEASE_LTO = true
export CARGO_PROFILE_RELEASE_CODEGEN_UNITS = 1

%:
	dh $@

override_dh_auto_configure:
	# Create cargo home directory
	mkdir -p $(CARGO_HOME)

override_dh_auto_build:
	# Build the Rust binary in release mode
	cargo build --release --locked

override_dh_auto_test:
	# Run tests
	cargo test --release --locked

override_dh_auto_install:
	# Install the binary
	install -D -m 755 target/release/dynserver debian/dynserver/usr/bin/dynserver
	
	# Install systemd service file
	install -D -m 644 dynserver.service debian/dynserver/lib/systemd/system/dynserver.service
	
	# Install example configuration
	install -D -m 644 config.toml.example debian/dynserver/etc/dynserver/config.toml.example
	
	# Install logrotate configuration
	install -D -m 644 debian/logrotate debian/dynserver/etc/logrotate.d/dynserver
	
	# Install templates
	mkdir -p debian/dynserver/usr/share/dynserver/templates
	cp -r templates/* debian/dynserver/usr/share/dynserver/templates/
	
	# Install static files
	mkdir -p debian/dynserver/usr/share/dynserver/static
	cp -r static/* debian/dynserver/usr/share/dynserver/static/
	
	# Create directories for runtime data
	mkdir -p debian/dynserver/var/lib/dynserver
	mkdir -p debian/dynserver/var/log/dynserver
	
	# Create config directory
	mkdir -p debian/dynserver/etc/dynserver

override_dh_auto_clean:
	# Clean cargo build artifacts
	cargo clean || true
	rm -rf $(CARGO_HOME)

override_dh_fixperms:
	dh_fixperms
	# Ensure correct permissions for sensitive directories
	chmod 750 debian/dynserver/etc/dynserver
	chmod 750 debian/dynserver/var/lib/dynserver
	chmod 755 debian/dynserver/var/log/dynserver